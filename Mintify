import json
import requests
from web3 import Web3
from eth_account import Account

# Configuration
IPFS_API_URL = "https://api.pinata.cloud/pinning/pinFileToIPFS"
IPFS_API_KEY = "your_pinata_api_key"
IPFS_SECRET_API_KEY = "your_pinata_secret_api_key"
INFURA_URL = "https://sepolia.infura.io/v3/<your_infura_project_id>"
PRIVATE_KEY = "your_ethereum_private_key"
CONTRACT_ADDRESS = "your_deployed_contract_address"
CONTRACT_ABI = json.loads('''
[
  {
    "inputs": [
      {"internalType": "string", "name": "tokenURI", "type": "string"}
    ],
    "name": "mintNFT",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
''')

# Web3 Setup
web3 = Web3(Web3.HTTPProvider(INFURA_URL))
account = Account.from_key(PRIVATE_KEY)

def upload_to_ipfs(file_path):
    """Uploads a file to IPFS and returns the URL."""
    with open(file_path, 'rb') as file:
        response = requests.post(
            IPFS_API_URL,
            headers={
                "pinata_api_key": IPFS_API_KEY,
                "pinata_secret_api_key": IPFS_SECRET_API_KEY,
            },
            files={"file": file}
        )
        if response.status_code == 200:
            ipfs_hash = response.json()["IpfsHash"]
            return f"https://gateway.pinata.cloud/ipfs/{ipfs_hash}"
        else:
            raise Exception("IPFS upload failed:", response.text)

def mint_nft(metadata_url):
    """Mints an NFT with the provided metadata URL."""
    contract = web3.eth.contract(address=CONTRACT_ADDRESS, abi=CONTRACT_ABI)
    tx = contract.functions.mintNFT(metadata_url).buildTransaction({
        'from': account.address,
        'nonce': web3.eth.getTransactionCount(account.address),
        'gas': 300000,
        'gasPrice': web3.toWei('50', 'gwei'),
    })
    signed_tx = web3.eth.account.signTransaction(tx, PRIVATE_KEY)
    tx_hash = web3.eth.sendRawTransaction(signed_tx.rawTransaction)
    return web3.toHex(tx_hash)

if __name__ == "__main__":
    print("Welcome to Mintify: Simplified NFT Creator!")
    
    image_path = input("Enter the path to your image file: ")
    print("Uploading to IPFS...")
    ipfs_url = upload_to_ipfs(image_path)
    print(f"Image uploaded: {ipfs_url}")

    metadata = {
        "name": input("Enter the name of the NFT: "),
        "description": input("Enter a description for the NFT: "),
        "image": ipfs_url,
    }
    
    with open("metadata.json", "w") as meta_file:
        json.dump(metadata, meta_file)

    print("Uploading metadata to IPFS...")
    metadata_url = upload_to_ipfs("metadata.json")
    print(f"Metadata uploaded: {metadata_url}")

    print("Minting your NFT...")
    transaction_hash = mint_nft(metadata_url)
    print(f"NFT Minted! Transaction Hash: {transaction_hash}")
